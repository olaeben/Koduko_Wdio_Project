pipeline {
    agent any

    parameters {
        choice(name: 'PLATFORM', choices: ['iOS', 'Android'], description: 'Select the platform to run tests on')
    }

    environment {
        PATH = "/Users/waleibitoye/.nvm/versions/node/v18.7.0/bin:$PATH"
        ANDROID_HOME = "/Users/waleibitoye/Library/Android/sdk"  
        PATH = "$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH"
    }

    tools {
        nodejs '18.7.0'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'parameterSetup', url: 'https://github.com/olaeben/Koduko_Wdio_Project.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Start Appium Server') {
            steps {
                script {
                    sh '''
                    echo "Starting Appium Server"
                    npx appium --base-path / --port 4725 &
                    '''
                }
            }
        }

        stage('Start Emulator or Simulator') {
            steps {
                script {
                    if (params.PLATFORM == 'iOS') {
                        sh '''
                        echo "Starting iOS Simulator"
                        xcrun simctl boot "iPhone 15 Plus"
                        open -a Simulator
                        '''
                    } else if (params.PLATFORM == 'Android') {
                        sh '''
                        echo "Starting Android Emulator"
                        nohup $ANDROID_HOME/emulator/emulator -avd emulator-5554 -no-audio -no-window &
                        '''
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    if (params.PLATFORM == 'iOS') {
                        sh 'npx wdio run wdio.iOS.conf.js'
                    } else if (params.PLATFORM == 'Android') {
                        sh 'npx wdio run wdio.android.conf.js'
                    }
                }
            }
        }

        stage('Generate Allure Report') {
            steps {
                sh 'allure generate allure-results --clean'
            }
        }

        stage('Publish Allure Report') {
            steps {
                allure([
                    includeProperties: false,
                    jdk: '',
                    properties: [],
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: 'allure-results']]
                ])
            }
        }
    }

    post {
        always {
            sh 'xcrun simctl shutdown all || true'
            sh 'adb -s emulator-5554 emu kill || true'
        }
    }
}
